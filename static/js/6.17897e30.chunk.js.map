{"version":3,"sources":["components/comicsList/ComicsList.js","components/pages/ComicsPage.js","components/errorMessage/error.png","components/errorMessage/ErrorMessage.js","services/MarvelService.js","hooks/http.hook.js","components/errorBoundary/ErrorBoundary.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js"],"names":["ComicsList","useState","comicList","setComicList","newItemLoading","setNewItemLoading","offset","setOffset","comicEnded","setComicEnded","MarvelService","loading","error","getAllComics","useEffect","onRequest","initial","then","onComicListLoaded","newComicList","ended","length","items","arr","map","item","className","to","id","src","thumbnail","alt","title","price","renderItems","errorMessage","ErrorMessage","spinner","Spinner","disabled","style","onClick","ComicsPage","Helmet","name","content","AppBanner","ErrorBoundary","img","display","width","height","objectFit","margin","setLoading","setError","request","useCallback","url","method","body","headers","fetch","response","ok","Error","status","json","data","message","clearError","useHttp","_apiBase","_apiKey","_baseOffset","getAllCharacters","a","res","results","_transformCharacter","_transformComics","getCharacterByName","getComic","getCharacterById","char","substr","description","path","extension","homepage","urls","wiki","comics","prices","pageCount","language","textObjects","props","children","e","console","log","avengers","avengersLogo"],"mappings":"gNA2FeA,EAnFI,WAEf,MAAkCC,mBAAS,IAAG,mBAAvCC,EAAS,KAAEC,EAAY,KAC9B,EAA4CF,oBAAS,GAAM,mBAApDG,EAAc,KAAEC,EAAiB,KACxC,EAA4BJ,mBAAS,MAAK,mBAAnCK,EAAM,KAAEC,EAAS,KACxB,EAAoCN,oBAAS,GAAM,mBAA5CO,EAAU,KAAEC,EAAa,KAEhC,EAAuCC,cAAhCC,EAAO,EAAPA,QAASC,EAAK,EAALA,MAAOC,EAAY,EAAZA,aAEvBC,qBAAU,WACNC,GAAU,KACX,IAEH,IAAMA,EAAY,SAACC,GACLX,GAAVW,GACAH,EAAaP,GACRW,KAAKC,IAGRA,EAAoB,SAACC,GACvB,IAAIC,GAAQ,EACRD,EAAaE,OAAS,IACtBD,GAAQ,GAGZjB,EAAa,GAAD,mBAAKD,GAAS,YAAKiB,KAC/Bd,GAAkB,GAClBE,GAAU,SAAAD,GAAM,OAAIA,EAAS,KAC7BG,EAAcW,IA8BZE,EA3Bc,SAACC,GACjB,IAAMD,EAASC,EAAIC,KAAI,SAACC,GAEpB,OACI,oBACIC,UAAU,eAAc,SAGxB,eAAC,IAAI,CAACC,GAAE,kCAA6BF,EAAKG,IAAK,UAC3C,qBACIC,IAAKJ,EAAKK,UACVC,IAAKN,EAAKO,MACVN,UAAU,qBAEd,qBAAKA,UAAU,oBAAmB,SAAED,EAAKO,QACzC,qBAAKN,UAAU,qBAAoB,SAAED,EAAKQ,YATzCR,EAAKG,OActB,OACI,oBAAIF,UAAU,eAAc,SACvBJ,IAKCY,CAAYhC,GAEpBiC,EAAevB,EAAQ,cAACwB,EAAA,EAAY,IAAK,KACzCC,EAAU1B,IAAYP,EAAiB,cAACkC,EAAA,EAAO,IAAK,KAE1D,OACI,sBAAKZ,UAAU,eAAc,UACxBS,EACAE,EACAf,EACD,wBACII,UAAU,mCACVa,SAAUnC,EACVoC,MAAO,CAAC,QAAWhC,EAAa,OAAS,SACzCiC,QAAS,kBAAM1B,GAAU,IAAO,SAChC,qBAAKW,UAAU,QAAO,6B,gBCxDvBgB,UAnBI,WAEf,OACI,qCACI,eAACC,EAAA,EAAM,WACH,sBACIC,KAAK,cACLC,QAAQ,6BAEZ,mDAEJ,cAACC,EAAA,EAAS,IACV,cAACC,EAAA,EAAa,UACV,cAAC,EAAU,W,gCCnBZ,UAA0B,kC,OCQ1BX,IANM,WACjB,OACI,qBAAKP,IAAKmB,EAAKR,MAAO,CAACS,QAAS,QAASC,MAAO,QAASC,OAAQ,QAASC,UAAW,UAAWC,OAAQ,UAAWtB,IAAI,Y,yEC4DhHrB,IA9DO,WAElB,MCFmB,WACnB,MAA8BT,oBAAS,GAAM,mBAAtCU,EAAO,KAAE2C,EAAU,KAC1B,EAA0BrD,mBAAS,MAAK,mBAAjCW,EAAK,KAAE2C,EAAQ,KA2BtB,MAAO,CAAC5C,UAAS6C,QAzBDC,sBAAW,uCAAC,WAAOC,GAAG,2FAEjB,OAFmBC,EAAM,+BAAG,MAAOC,EAAI,+BAAG,KAAMC,EAAO,+BAAG,CAAC,eAAgB,oBAE5FP,GAAW,GAAM,kBAGUQ,MAAMJ,EAAK,CAACC,SAAQC,OAAMC,YAAU,KAAD,EAA5C,IAARE,EAAQ,QAEAC,GAAG,CAAD,sBACN,IAAIC,MAAM,mBAAD,OAAoBP,EAAG,qBAAaK,EAASG,SAAU,KAAD,oBAGtDH,EAASI,OAAO,KAAD,GAEhB,OAFZC,EAAI,OAEVd,GAAW,GAAO,kBACXc,GAAI,QAIS,MAJT,0BAGXd,GAAW,GACXC,EAAS,KAAEc,SAAS,+DAG3B,mDArB0B,GAqBxB,IAIuBzD,QAAO0D,WAFdb,uBAAY,kBAAMF,EAAS,QAAO,KDzBPgB,GAAvC5D,EAAO,EAAPA,QAAS6C,EAAO,EAAPA,QAAS5C,EAAK,EAALA,MAAO0D,EAAU,EAAVA,WAE1BE,EAAW,4CACXC,EAAU,0CACVC,EAAc,IAEdC,EAAgB,uCAAG,0CAAAC,EAAA,sDAA2B,OAApBtE,EAAM,+BAAGoE,EAAW,SAC9BlB,EAAQ,GAAD,OAAIgB,EAAQ,qCAA6BlE,EAAM,YAAImE,IAAW,KAAD,EAA7E,OAAHI,EAAG,yBACFA,EAAIT,KAAKU,QAAQtD,IAAIuD,IAAoB,2CACnD,kBAHqB,mCAKhBlE,EAAY,uCAAG,0CAAA+D,EAAA,sDAA2B,OAApBtE,EAAM,+BAAGoE,EAAW,SAC1BlB,EAAQ,GAAD,OAAIgB,EAAQ,iCAAyBlE,EAAM,YAAImE,IAAW,KAAD,EAAzE,OAAHI,EAAG,yBACFA,EAAIT,KAAKU,QAAQtD,IAAIwD,IAAiB,2CAChD,kBAHiB,mCAKZC,EAAkB,uCAAG,WAAOrC,GAAI,uFAChBY,EAAQ,GAAD,OAAIgB,EAAQ,2BAAmB5B,EAAI,YAAI6B,IAAW,KAAD,EAAjE,OAAHI,EAAG,yBACFA,EAAIT,KAAKU,QAAQtD,IAAIuD,IAAoB,2CACnD,gBAHuB,sCAKlBG,EAAQ,uCAAG,WAAOtD,GAAE,uFACJ4B,EAAQ,GAAD,OAAIgB,EAAQ,kBAAU5C,EAAE,YAAI6C,IAAW,KAAD,EAAtD,OAAHI,EAAG,yBACFG,EAAiBH,EAAIT,KAAKU,QAAQ,KAAG,2CAC/C,gBAHa,sCAKRK,EAAgB,uCAAG,WAAOvD,GAAE,uFACZ4B,EAAQ,GAAD,OAAIgB,EAAQ,sBAAc5C,EAAE,YAAI6C,IAAW,KAAD,EAA1D,OAAHI,EAAG,yBACFE,EAAoBF,EAAIT,KAAKU,QAAQ,KAAG,2CAClD,gBAHqB,sCAKhBC,EAAsB,SAACK,GAEzB,MAAO,CACHxD,GAAIwD,EAAKxD,GACTgB,KAAOwC,EAAKxC,KAAKvB,OAAS,GAAM+D,EAAKxC,KAAKyC,OAAO,EAAG,IAAM,MAAQD,EAAKxC,KACvE0C,YAAaF,EAAKE,YAAcF,EAAKE,YAAYD,OAAO,EAAG,KAAO,MAAQ,yCAC1EvD,UAAWsD,EAAKtD,UAAUyD,KAAO,IAAMH,EAAKtD,UAAU0D,UACtDC,SAAUL,EAAKM,KAAK,GAAGhC,IACvBiC,KAAMP,EAAKM,KAAK,GAAGhC,IACnBkC,OAAQR,EAAKQ,OAAOtE,QAItB0D,EAAmB,SAACY,GAEtB,MAAO,CACHhE,GAAIgE,EAAOhE,GACXI,MAAO4D,EAAO5D,MACdF,UAAW8D,EAAO9D,UAAUyD,KAAO,IAAMK,EAAO9D,UAAU0D,UAC1DvD,MAAO2D,EAAOC,OAAO,GAAG5D,MAAQ,IAChCqD,YAAaM,EAAON,aAAe,0BACnCQ,UAAWF,EAAOE,UAAS,UAAMF,EAAOE,UAAS,OAAQ,2CACzDC,SAAUH,EAAOI,YAAYD,UAAY,UAIjD,MAAO,CAACpF,UAASC,QAAO0D,aAAYK,mBAAkBQ,mBAAkBtE,eAAcqE,WAAUD,wB,iEE1CrFlC,IAhBO,SAACkD,GAEnB,MAA0BhG,oBAAS,GAAM,mBAAlCW,EAAK,KAAE2C,EAAQ,KAEtB,IACI,OAAI3C,EACO,cAAC,IAAY,IAGjBqF,EAAMC,SACf,MAAOC,GACLC,QAAQC,IAAIF,GACZ5C,GAAS,M,+DCfF,MAA0B,qCCA1B,MAA0B,0C,OCiB1BT,IAbG,WACd,OACI,sBAAKpB,UAAU,cAAa,UACxB,qBAAKG,IAAKyE,EAAUvE,IAAI,aACxB,sBAAKL,UAAU,mBAAkB,mCACP,uBAAK,iBAG/B,qBAAKG,IAAK0E,EAAcxE,IAAI","file":"static/js/6.17897e30.chunk.js","sourcesContent":["import Spinner from '../spinner/Spinner';\r\nimport PropTypes from 'prop-types';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\nimport MarvelService from '../../services/MarvelService';\r\nimport {useState, useEffect} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './comicsList.scss';\r\n\r\nconst ComicsList = () => {\r\n\r\n    const [comicList, setComicList] = useState([]);\r\n    const [newItemLoading, setNewItemLoading] = useState(false);\r\n    const [offset, setOffset] = useState(1541);\r\n    const [comicEnded, setComicEnded] = useState(false);\r\n\r\n    const {loading, error, getAllComics} = MarvelService();\r\n\r\n    useEffect(() => {\r\n        onRequest(true);\r\n    }, []);\r\n\r\n    const onRequest = (initial) => {\r\n        initial ? setNewItemLoading(false) : setNewItemLoading(true)\r\n        getAllComics(offset)\r\n            .then(onComicListLoaded)\r\n    }\r\n\r\n    const onComicListLoaded = (newComicList) => {\r\n        let ended = false;\r\n        if (newComicList.length < 8) {\r\n            ended = true;\r\n        }\r\n\r\n        setComicList([...comicList, ...newComicList]);\r\n        setNewItemLoading(false);\r\n        setOffset(offset => offset + 8);\r\n        setComicEnded(ended);\r\n    }\r\n\r\n    const renderItems = (arr) => {\r\n        const items =  arr.map((item) => {\r\n\r\n            return (\r\n                <li \r\n                    className='comics__item'\r\n                    key={item.id}\r\n                    >\r\n                    <Link to={`Marvel-Api-React/comics/${item.id}`}>\r\n                        <img \r\n                            src={item.thumbnail} \r\n                            alt={item.title}\r\n                            className=\"comics__item-img\"\r\n                            />\r\n                        <div className=\"comics__item-name\">{item.title}</div>\r\n                        <div className=\"comics__item-price\">{item.price}</div>\r\n                    </Link>\r\n                </li>\r\n            )\r\n        });\r\n        return (\r\n            <ul className=\"comics__grid\">\r\n                {items}\r\n            </ul>\r\n        )\r\n    }\r\n\r\n    const items = renderItems(comicList);\r\n\r\n    const errorMessage = error ? <ErrorMessage/> : null;\r\n    const spinner = loading && !newItemLoading ? <Spinner/> : null;\r\n\r\n    return (\r\n        <div className=\"comics__list\">\r\n            {errorMessage}\r\n            {spinner}\r\n            {items}\r\n            <button \r\n                className=\"button button__main button__long\"\r\n                disabled={newItemLoading}\r\n                style={{'display': comicEnded ? 'none' : 'block'}}\r\n                onClick={() => onRequest(false)}>\r\n                <div className=\"inner\">load more</div>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nComicsList.propTypes = {\r\n    onComicSelected: PropTypes.func\r\n}\r\n\r\nexport default ComicsList;","import { Helmet } from 'react-helmet';\r\n\r\nimport ComicsList from \"../comicsList/ComicsList\";\r\nimport AppBanner from \"../appBanner/AppBanner\";\r\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\r\n\r\nconst ComicsPage = () => {\r\n    \r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <meta\r\n                    name=\"description\"\r\n                    content=\"Page with list of comics\"\r\n                    />\r\n                <title>Comics Page</title>\r\n            </Helmet>\r\n            <AppBanner/>\r\n            <ErrorBoundary>\r\n                <ComicsList/>\r\n            </ErrorBoundary>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ComicsPage;","export default __webpack_public_path__ + \"static/media/error.9c0716bc.png\";","import img from './error.png'\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <img src={img} style={{display: 'block', width: '230px', height: '230px', objectFit: 'contain', margin: '0 auto'}} alt='Error'/>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","import {useHttp} from '../hooks/http.hook'\r\n\r\nconst MarvelService = () => {\r\n\r\n    const {loading, request, error, clearError} = useHttp();\r\n\r\n    const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n    const _apiKey = 'apikey=73da627187167e6c6216bd7cbd93f7f2';\r\n    const _baseOffset = 201;\r\n\r\n    const getAllCharacters = async (offset = _baseOffset) => {\r\n        const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\r\n        return res.data.results.map(_transformCharacter);\r\n    }\r\n\r\n    const getAllComics = async (offset = _baseOffset) => {\r\n        const res = await request(`${_apiBase}comics?limit=8&offset=${offset}&${_apiKey}`);\r\n        return res.data.results.map(_transformComics);\r\n    }\r\n\r\n    const getCharacterByName = async (name) => {\r\n        const res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`);\r\n        return res.data.results.map(_transformCharacter);\r\n    }\r\n\r\n    const getComic = async (id) => {\r\n        const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n        return _transformComics(res.data.results[0]);\r\n    }\r\n\r\n    const getCharacterById = async (id) => {\r\n        const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n        return _transformCharacter(res.data.results[0]);\r\n    }\r\n\r\n    const _transformCharacter = (char) => {\r\n\r\n        return {\r\n            id: char.id,\r\n            name: (char.name.length > 22) ? char.name.substr(0, 22) + '...' : char.name,\r\n            description: char.description ? char.description.substr(0, 203) + '...' : 'There is no data for this character :(',\r\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n            homepage: char.urls[0].url,\r\n            wiki: char.urls[1].url,\r\n            comics: char.comics.items\r\n        }\r\n    }\r\n\r\n    const _transformComics = (comics) => {\r\n\r\n        return {\r\n            id: comics.id,\r\n            title: comics.title,\r\n            thumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\r\n            price: comics.prices[0].price + '$',\r\n            description: comics.description || 'There is no description',\r\n            pageCount: comics.pageCount ? `${comics.pageCount} p.` : 'No information about the number of pages',\r\n            language: comics.textObjects.language || 'en-us'\r\n        }\r\n    }\r\n\r\n    return {loading, error, clearError, getAllCharacters, getCharacterById, getAllComics, getComic, getCharacterByName}\r\n}\r\n\r\nexport default MarvelService;","import {useState, useCallback} from 'react';\r\n\r\nexport const useHttp = () => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {'Content-Type': 'application/json'}) => {\r\n\r\n        setLoading(true);\r\n\r\n        try {\r\n            const response = await fetch(url, {method, body, headers});\r\n\r\n            if (!response.ok) {\r\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n            }\r\n\r\n            const data = await response.json();\r\n\r\n            setLoading(false);\r\n            return data;\r\n\r\n        } catch (e) {\r\n            setLoading(false);\r\n            setError(e.message);\r\n            throw e;\r\n        }\r\n    }, []);\r\n\r\n    const clearError = useCallback(() => setError(null), []);\r\n\r\n    return {loading, request, error, clearError}\r\n}","import {useState} from 'react';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\n\r\nconst ErrorBoundary = (props) => {\r\n\r\n    const [error, setError] = useState(false);\r\n\r\n    try {\r\n        if (error) {\r\n            return <ErrorMessage/>\r\n        }\r\n\r\n        return props.children;\r\n    } catch (e) {\r\n        console.log(e);\r\n        setError(true)\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\r\nimport avengers from '../../resources/img/Avengers.png';\r\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\r\n\r\nconst AppBanner = () => {\r\n    return (\r\n        <div className=\"app__banner\">\r\n            <img src={avengers} alt=\"Avengers\"/>\r\n            <div className=\"app__banner-text\">\r\n                New comics every week!<br/>\r\n                Stay tuned!\r\n            </div>\r\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppBanner;"],"sourceRoot":""}